<pos_bit_opti>:
 0x1660: PUSH	%RBP
 0x1661: MOV	%RSP,%RBP
 0x1664: SUB	$0x30,%RSP
 0x1668: MOV	%EDI,-0x24(%RBP)
 0x166b: CMPL	$0,-0x24(%RBP)
 0x166f: JNE	167b <pos_bit_opti+0x1b>
 0x1671: MOV	$0x1,%EDI
 0x1676: CALL	1060 <exit@plt>
 0x167b: MOVL	$0xffff,-0x10(%RBP)
 0x1682: MOVL	$-0x10000,-0xc(%RBP)
 0x1689: MOV	-0x24(%RBP),%EAX
 0x168c: MOV	%EAX,-0x4(%RBP)
 0x168f: MOVB	$0,-0x11(%RBP)
 0x1693: MOVL	$0x10,-0x8(%RBP)
 0x169a: JMP	16d9 <pos_bit_opti+0x79>
  (8)0x169c: MOV	-0x24(%RBP),%EAX
  (8)0x169f: AND	-0xc(%RBP),%EAX
  (8)0x16a2: MOV	%EAX,-0x4(%RBP)
  (8)0x16a5: CMPL	$0,-0x4(%RBP)
  (8)0x16a9: JE	16b9 <pos_bit_opti+0x59>
  (8)0x16ab: MOV	-0x8(%RBP),%EAX
  (8)0x16ae: MOV	%EAX,%EDX
  (8)0x16b0: MOVZX	-0x11(%RBP),%EAX
  (8)0x16b4: ADD	%EDX,%EAX
  (8)0x16b6: MOV	%AL,-0x11(%RBP)
  (8)0x16b9: SARL	$0x1,-0x8(%RBP)
  (8)0x16bc: MOV	-0x8(%RBP),%EAX
  (8)0x16bf: MOV	%EAX,%ECX
  (8)0x16c1: SARL	%CL,-0x10(%RBP)
  (8)0x16c4: MOVSX	-0x11(%RBP),%EDX
  (8)0x16c8: MOV	-0x8(%RBP),%EAX
  (8)0x16cb: ADD	%EDX,%EAX
  (8)0x16cd: MOV	-0x10(%RBP),%EDX
  (8)0x16d0: MOV	%EAX,%ECX
  (8)0x16d2: SAL	%CL,%EDX
  (8)0x16d4: MOV	%EDX,%EAX
  (8)0x16d6: MOV	%EAX,-0xc(%RBP)
  (8)0x16d9: CMPL	$0,-0x8(%RBP)
  (8)0x16dd: JNE	169c <pos_bit_opti+0x3c>
 0x16df: MOVZX	-0x11(%RBP),%EAX
 0x16e3: LEAVE
 0x16e4: RET
