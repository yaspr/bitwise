<pos_bit_best>:
 0x1be0: TEST	%EDI,%EDI
 0x1be2: JE	1c46 <pos_bit_best+0x66>
 0x1be4: MOV	%EDI,%EDX
 0x1be6: XOR	%DX,%DX
 0x1be9: CMP	$0x1,%EDX
 0x1bec: SBB	%EAX,%EAX
 0x1bee: NOT	%EAX
 0x1bf0: AND	$0x10,%EAX
 0x1bf3: CMP	$0x1,%EDX
 0x1bf6: SBB	%EDX,%EDX
 0x1bf8: LEA	0x8(%RAX),%ECX
 0x1bfb: AND	$0x100ff00,%EDX
 0x1c01: SUB	$0x1000000,%EDX
 0x1c07: TEST	%EDX,%EDI
 0x1c09: MOV	$0xf0,%EDX
 0x1c0e: CMOVNE	%ECX,%EAX
 0x1c11: MOV	%EAX,%ECX
 0x1c13: MOVZX	%AL,%ESI
 0x1c16: SAL	%CL,%EDX
 0x1c18: TEST	%EDI,%EDX
 0x1c1a: JE	1c22 <pos_bit_best+0x42>
 0x1c1c: ADD	$0x4,%EAX
 0x1c1f: MOVZX	%AL,%ESI
 0x1c22: MOV	$0xc,%EDX
 0x1c27: MOV	%ESI,%ECX
 0x1c29: SAL	%CL,%EDX
 0x1c2b: TEST	%EDI,%EDX
 0x1c2d: JE	1c35 <pos_bit_best+0x55>
 0x1c2f: ADD	$0x2,%EAX
 0x1c32: MOVZX	%AL,%ESI
 0x1c35: MOV	%ESI,%ECX
 0x1c37: MOV	$0x2,%EDX
 0x1c3c: SAL	%CL,%EDX
 0x1c3e: TEST	%EDI,%EDX
 0x1c40: SETNE	%DL
 0x1c43: ADD	%EDX,%EAX
 0x1c45: RET
 0x1c46: PUSH	%RAX
 0x1c47: MOV	$0x1,%EDI
 0x1c4c: CALL	1060 <exit@plt>
 0x1c51: NOPW	%CS:(%RAX,%RAX,1)
 0x1c5b: NOPL	(%RAX,%RAX,1)
