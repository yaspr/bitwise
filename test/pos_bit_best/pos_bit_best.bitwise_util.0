<pos_bit_best>:
 0x16e5: PUSH	%RBP
 0x16e6: MOV	%RSP,%RBP
 0x16e9: SUB	$0x20,%RSP
 0x16ed: MOV	%EDI,-0x14(%RBP)
 0x16f0: CMPL	$0,-0x14(%RBP)
 0x16f4: JNE	1700 <pos_bit_best+0x1b>
 0x16f6: MOV	$0x1,%EDI
 0x16fb: CALL	1060 <exit@plt>
 0x1700: MOVB	$0,-0x1(%RBP)
 0x1704: MOV	-0x14(%RBP),%EAX
 0x1707: MOV	$0,%AX
 0x170b: TEST	%EAX,%EAX
 0x170d: JE	1716 <pos_bit_best+0x31>
 0x170f: MOV	$0x10,%EAX
 0x1714: JMP	171b <pos_bit_best+0x36>
 0x1716: MOV	$0,%EAX
 0x171b: MOV	%AL,-0x1(%RBP)
 0x171e: MOVSX	-0x1(%RBP),%EAX
 0x1722: MOV	$0xff00,%EDX
 0x1727: MOV	%EAX,%ECX
 0x1729: SAL	%CL,%EDX
 0x172b: MOV	%EDX,%EAX
 0x172d: AND	-0x14(%RBP),%EAX
 0x1730: TEST	%EAX,%EAX
 0x1732: JE	173b <pos_bit_best+0x56>
 0x1734: MOV	$0x8,%EDX
 0x1739: JMP	1740 <pos_bit_best+0x5b>
 0x173b: MOV	$0,%EDX
 0x1740: MOVZX	-0x1(%RBP),%EAX
 0x1744: ADD	%EDX,%EAX
 0x1746: MOV	%AL,-0x1(%RBP)
 0x1749: MOVSX	-0x1(%RBP),%EAX
 0x174d: MOV	$0xf0,%EDX
 0x1752: MOV	%EAX,%ECX
 0x1754: SAL	%CL,%EDX
 0x1756: MOV	%EDX,%EAX
 0x1758: AND	-0x14(%RBP),%EAX
 0x175b: TEST	%EAX,%EAX
 0x175d: JE	1766 <pos_bit_best+0x81>
 0x175f: MOV	$0x4,%EDX
 0x1764: JMP	176b <pos_bit_best+0x86>
 0x1766: MOV	$0,%EDX
 0x176b: MOVZX	-0x1(%RBP),%EAX
 0x176f: ADD	%EDX,%EAX
 0x1771: MOV	%AL,-0x1(%RBP)
 0x1774: MOVSX	-0x1(%RBP),%EAX
 0x1778: MOV	$0xc,%EDX
 0x177d: MOV	%EAX,%ECX
 0x177f: SAL	%CL,%EDX
 0x1781: MOV	%EDX,%EAX
 0x1783: AND	-0x14(%RBP),%EAX
 0x1786: TEST	%EAX,%EAX
 0x1788: JE	1791 <pos_bit_best+0xac>
 0x178a: MOV	$0x2,%EDX
 0x178f: JMP	1796 <pos_bit_best+0xb1>
 0x1791: MOV	$0,%EDX
 0x1796: MOVZX	-0x1(%RBP),%EAX
 0x179a: ADD	%EDX,%EAX
 0x179c: MOV	%AL,-0x1(%RBP)
 0x179f: MOVSX	-0x1(%RBP),%EAX
 0x17a3: MOV	$0x2,%EDX
 0x17a8: MOV	%EAX,%ECX
 0x17aa: SAL	%CL,%EDX
 0x17ac: MOV	%EDX,%EAX
 0x17ae: AND	-0x14(%RBP),%EAX
 0x17b1: TEST	%EAX,%EAX
 0x17b3: SETNE	%AL
 0x17b6: MOV	%EAX,%EDX
 0x17b8: MOVZX	-0x1(%RBP),%EAX
 0x17bc: ADD	%EDX,%EAX
 0x17be: MOV	%AL,-0x1(%RBP)
 0x17c1: MOVZX	-0x1(%RBP),%EAX
 0x17c5: LEAVE
 0x17c6: RET
